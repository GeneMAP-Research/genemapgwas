executor {
    name = 'slurm'
    queue = 'sadacc-long'
    queueSize = 30
}

params {
    ref = '/scratch/eshkev001/projects/scd-gwas/h3a_A3_ref/h3a_A3.ref'
    ref_fasta = '/scratch/eshkev001/db/hg19/hg19.fa'
    manifest_bpm = '/scratch/eshkev001/projects/scd-gwas/manifest/H3Africa_2017_20021485_A3.bpm'
    manifest_csv = '/scratch/eshkev001/projects/scd-gwas/manifest/H3Africa_2017_20021485_A3.csv'
    cluster_file = '/scratch/eshkev001/projects/scd-gwas/clusterFile/GenomeStudio-H3Africa-array-clusters-HapMap2-186-samples.egt'
    idat_dir = '/scratch/eshkev001/projects/scd-gwas/batch1/intensities/'
    output_dir = '/scratch/eshkev001/projects/scd-gwas/batch1/'
    gtc_list = '/scratch/eshkev001/projects/scd-gwas/batch1/gtc_files.list.txt'
    output_prefix = 'AW2018'
    containers_dir = '/scratch/eshkev001/containers/'
    
    // LiftOver Parameters
    chain_file = '/scratch/eshkev001/db/hg19ToHg38.over.chain'
    target_ref = '/scratch/eshkev001/db/hg38/hg38.fa'
    input_vcf = '/scratch/eshkev001/projects/scd-gwas/batch1/vcf/AW2018.vcf.gz'

}

singularity {
    enabled = true
    automounts = true
    cacheDir = "${HOME}/singularity"
}

process {

    errorStrategy = { task.exitStatus in [135,140,143,255] ? 'retry' : 'terminate' }
    maxErrors = '-1'
    maxRetries = 3

    cpus = 2
    time = 53.h
    memory = 50.GB
    clusterOptions = '--account humgen --partition sadacc-long --nodes=1'

    withLabel:mediumMemory {
        cpus = 22
        time = { 5.m * task.attempt }
        memory = { 1.GB * task.attempt }
    }
    withLabel:bigMemory {
        time = { 15.m * task.attempt }
        cpus = 11
        memory = { 90.GB * task.attempt }
    }
    withLabel:gtc_to_vcf {
        time = 5.h
        cpus = 40
        memory = 100.GB
    }
    withLabel:lift_over {
        time = 5.h
        cpus = 40
        memory = 100.GB
    }

    withLabel:plink2 {
        container = "${params.containers_dir}plink2_latest.sif"
    }
    withLabel:gatk {
        container = "${params.containers_dir}gatk_latest.sif"
    }
    withLabel:Rbase {
        container = "${params.containers_dir}R.sif"
    }
    withLabel:samtools {
        container = "${params.containers_dir}samtools_1.11.sif"
    }
    withLabel:bwa_bgzip {
        container = "${params.containers_dir}bwa_bgzip_latest.sif"
    }
    withLabel:bgzip {
        container = "${params.containers_dir}bgzip_latest.sif"
    }
    withLabel:gencall {
        container = "${params.containers_dir}gencall.sif"
    }

}

