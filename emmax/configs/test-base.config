process {

    errorStrategy = { task.exitStatus in [135,143,255] ? 'retry' : 'terminate' }
    maxErrors = '-1'
    maxRetries = 5
    
    // Resources
    withLabel:smallMemory {
        cpus = 24
        time = 5.m
        memory = 2.GB
    }
    withLabel:bigMemory {
        time = { 15.m * task.attempt }
        cpus = 24
        memory = { 30.GB * task.attempt }
    }
    withLabel:longRun {
        time = 2.h
        cpus = 24
        memory = 100.GB
    }
    withLabel:fastqc_mem {
        time = { 10.m * task.attempt }
        cpus = 24
        memory = { 2.GB * task.attempt }
    }
    withLabel:multiqc_mem {
        time = { 10.m * task.attempt }
        cpus = 24
        memory = { 5.GB * task.attempt }
    }
    withLabel:readAligner {
        time = 30.m
        cpus = 24
        memory = 30.GB
    }
    withLabel:bamSorter {
        time = 30.m
        cpus = 24
        memory = 30.GB
    }
    withLabel:bamIndexer {
        time = 10.m
        cpus = 24
        memory = 4.GB
    }
    withLabel:fixBam {
        time = { 10.m * task.attempt }
        cpus = 24
        memory = { 10.GB * task.attempt }
    }
    withLabel:duplicateMarker {
        time = { 30.m * task.attempt }
        cpus = 1
        memory = { 30.GB * task.attempt }
    }
    withLabel:duplicateMarkerSpark {
        time = { 30.m * task.attempt }
        cpus = 5
        memory = { 30.GB * task.attempt }
    }
    withLabel:baseRecalibrator {
        time = 30.m
        cpus = 24
        memory = 30.GB
    }
    withLabel:baseRecalibratorSpark {
        time = { 30.m * task.attempt }
        cpus = 24
        memory = { 30.GB * task.attempt }
    }
    withLabel:applyBqsr {
        time = 30.m
        cpus = 24
        memory = 30.GB
    }
    withLabel:variantCaller {
        time = { 30.m * task.attempt }
        cpus = 24
        memory = { 30.GB * task.attempt }
    }
    withLabel:mediumMemory {
        cpus = 24
        time = { 5.m * task.attempt }
        memory = { 1.GB * task.attempt }
    }
}

